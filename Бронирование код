<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Бронирование мест для автобусов | GHELIOS TRANS</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
     <style>
        :root {
            --primary: #2c3e50;
            --primary-light: #3a516e;
            --secondary: #3498db;
            --secondary-dark: #2980b9;
            --success: #27ae60;
            --danger: #e74c3c;
            --warning: #f39c12;
            --light: #ecf0f1;
            --dark: #34495e;
            --gray: #7f8c8d;
            --light-gray: #f8f9fa;
            --white: #ffffff;
            --shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            touch-action: manipulation;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }

        body {
            font-family: 'Roboto', 'Segoe UI', 'Helvetica Neue', sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #e4edf5 100%);
            color: #212529;
            line-height: 1.6;
            min-height: 100vh;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
            font-size: 16px;
        }
        
        /* Подключение шрифтов Google */
        @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap');

        .header {
            width: 100%;
            max-width: 1200px;
            text-align: center;
            margin-bottom: 30px;
            padding: 20px 0;
        }

        .logo {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 15px;
            margin-bottom: 15px;
        }

        .logo-icon {
            background: var(--primary);
            color: white;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
        }

        .logo-text {
            font-size: 1.8rem;
            font-weight: 700;
            color: var(--primary);
        }

        .tagline {
            color: var(--gray);
            font-size: 1.1rem;
            max-width: 600px;
            margin: 0 auto;
        }

        .container {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            display: grid;
            grid-template-columns: 1fr;
            gap: 30px;
            transition: all 0.3s ease;
        }

        @media (min-width: 992px) {
            .container {
                grid-template-columns: 1fr 1fr;
            }
        }
        
        @media (max-width: 768px) {
            .container {
                padding: 15px;
                gap: 20px;
            }
        }
        
        @media (max-width: 480px) {
            .container {
                padding: 10px;
                gap: 15px;
            }
            
            .input-group input,
            .input-group select {
                padding: 10px 12px;
                font-size: 14px;
            }
        }

        .card {
            background: var(--white);
            border-radius: 16px;
            padding: 30px;
            box-shadow: var(--shadow);
            transition: var(--transition);
            border: 1px solid rgba(0, 0, 0, 0.05);
        }

        .card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
        }

        .card-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--primary);
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .card-title i {
            color: var(--secondary);
        }

        .input-group {
            position: relative;
            margin-bottom: 20px;
        }

        .input-group label {
            display: block;
            color: var(--primary);
            font-weight: 500;
            margin-bottom: 8px;
            font-size: 14px;
            transition: var(--transition);
        }

        .input-group input,
        .input-group select {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e9ecef;
            border-radius: 12px;
            font-size: 16px;
            transition: var(--transition);
            background: white;
            color: var(--dark);
        }

        .input-group input:focus,
        .input-group select:focus {
            outline: none;
            border-color: var(--secondary);
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
            transform: translateY(-1px);
        }

        .input-group input:hover,
        .input-group select:hover {
            border-color: #adb5bd;
        }

        .input-group.required label::after {
            content: ' *';
            color: var(--danger);
            font-weight: bold;
        }

        .input-group input::placeholder {
            color: #adb5bd;
            transition: var(--transition);
        }

        .input-group input:focus::placeholder {
            opacity: 0.7;
        }

        .button-group {
            display: flex;
            gap: 12px;
            flex-wrap: wrap;
            justify-content: center;
            margin-top: 25px;
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 12px;
            cursor: pointer;
            font-weight: 500;
            font-size: 16px;
            transition: var(--transition);
            display: flex;
            align-items: center;
            gap: 8px;
            text-decoration: none;
            min-height: 48px;
            min-width: 120px;
            justify-content: center;
        }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none !important;
        }

        .btn:not(:disabled):hover {
            transform: translateY(-2px);
        }

        .btn:not(:disabled):active {
            transform: translateY(0);
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--secondary) 0%, var(--secondary-dark) 100%);
            color: white;
            box-shadow: 0 4px 15px rgba(52, 152, 219, 0.3);
        }

        .btn-primary:not(:disabled):hover {
            box-shadow: 0 6px 20px rgba(52, 152, 219, 0.4);
        }

        .btn-secondary {
            background: linear-gradient(135deg, var(--gray) 0%, var(--dark) 100%);
            color: white;
            box-shadow: 0 4px 15px rgba(127, 140, 141, 0.3);
        }

        .btn-secondary:not(:disabled):hover {
            box-shadow: 0 6px 20px rgba(127, 140, 141, 0.4);
        }

        .date-selection {
            text-align: center;
            margin-bottom: 20px;
        }

        .date-selection h2 {
            color: var(--primary);
            margin-bottom: 15px;
            font-weight: 600;
        }

        .seat-map {
            background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
            border-radius: 16px;
            padding: 20px;
            margin: 20px 0;
            position: relative;
            overflow: hidden;
            border: 2px solid #e9ecef;
        }

        .seat-map::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(52, 152, 219, 0.03) 0%, transparent 70%);
            pointer-events: none;
        }

        .bus-layout {
            position: relative;
            z-index: 1;
        }

        .bus-front {
            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-light) 100%);
            color: white;
            padding: 12px;
            text-align: center;
            border-radius: 12px 12px 0 0;
            margin-bottom: 20px;
            font-weight: 600;
            box-shadow: var(--shadow);
        }

        .seat-grid {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 8px;
            max-width: 280px;
            margin: 0 auto;
        }

        @media (max-width: 480px) {
            .seat-grid {
                gap: 6px;
                max-width: 240px;
            }
        }

        .seat {
            aspect-ratio: 1;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            font-weight: 600;
            font-size: 12px;
            transition: var(--transition);
            position: relative;
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 40px;
        }

        .seat.aisle-break {
            margin-right: 20px;
        }

        .seat.free {
            background: linear-gradient(135deg, var(--success) 0%, #2ecc71 100%);
            color: white;
            box-shadow: 0 2px 8px rgba(39, 174, 96, 0.3);
        }

        .seat.free:hover {
            transform: translateY(-2px) scale(1.05);
            box-shadow: 0 4px 15px rgba(39, 174, 96, 0.4);
        }

        .seat.booked {
            background: linear-gradient(135deg, var(--warning) 0%, #e67e22 100%);
            color: white;
            cursor: not-allowed;
            box-shadow: 0 2px 8px rgba(243, 156, 18, 0.3);
        }

        .seat.confirmed {
            background: linear-gradient(135deg, var(--danger) 0%, #c0392b 100%);
            color: white;
            cursor: not-allowed;
            box-shadow: 0 2px 8px rgba(231, 76, 60, 0.3);
        }

        .seat.selected {
            background: linear-gradient(135deg, var(--secondary) 0%, var(--secondary-dark) 100%);
            color: white;
            transform: scale(1.1);
            box-shadow: 0 4px 20px rgba(52, 152, 219, 0.5);
            z-index: 10;
        }

        .seat:active {
            transform: scale(0.95);
        }

        .seat-legend {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin: 20px 0;
            flex-wrap: wrap;
        }

        @media (max-width: 480px) {
            .seat-legend {
                gap: 10px;
                font-size: 12px;
            }
        }

        .legend-item {
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 14px;
            color: var(--dark);
        }

        .legend-color {
            width: 16px;
            height: 16px;
            border-radius: 6px;
            flex-shrink: 0;
        }

        .legend-color.free {
            background: linear-gradient(135deg, var(--success) 0%, #2ecc71 100%);
        }

        .legend-color.booked {
            background: linear-gradient(135deg, var(--warning) 0%, #e67e22 100%);
        }

        .legend-color.confirmed {
            background: linear-gradient(135deg, var(--danger) 0%, #c0392b 100%);
        }

        .legend-color.selected {
            background: linear-gradient(135deg, var(--secondary) 0%, var(--secondary-dark) 100%);
        }

        .booking-summary {
            background: linear-gradient(135deg, var(--light) 0%, #ffffff 100%);
            border: 2px solid var(--secondary);
            border-radius: 16px;
            padding: 20px;
            margin-top: 20px;
        }

        .summary-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 12px 0;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        }

        .summary-item:last-child {
            border-bottom: none;
            font-weight: 600;
            font-size: 1.1rem;
            color: var(--primary);
        }

        .summary-item .label {
            color: var(--dark);
            font-weight: 500;
        }

        .summary-item .value {
            color: var(--primary);
            font-weight: 600;
        }

        .luggage-section {
            background: var(--light-gray);
            border-radius: 12px;
            padding: 20px;
            margin: 20px 0;
            border-left: 4px solid var(--secondary);
        }

        .luggage-section h3 {
            color: var(--primary);
            margin-bottom: 15px;
            font-size: 1.2rem;
        }

        .luggage-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }

        @media (max-width: 480px) {
            .luggage-grid {
                grid-template-columns: 1fr;
                gap: 10px;
            }
        }

        .info-box {
            background: linear-gradient(135deg, var(--secondary) 0%, var(--secondary-dark) 100%);
            color: white;
            padding: 15px;
            border-radius: 12px;
            font-size: 14px;
            text-align: center;
            margin-bottom: 20px;
        }

        .info-box i {
            font-size: 20px;
            margin-bottom: 8px;
            display: block;
        }

        .error-message {
            background: linear-gradient(135deg, var(--danger) 0%, #c0392b 100%);
            color: white;
            padding: 15px;
            border-radius: 12px;
            margin: 20px 0;
            text-align: center;
            font-weight: 500;
            box-shadow: var(--shadow);
        }

        .success-message {
            background: linear-gradient(135deg, var(--success) 0%, #2ecc71 100%);
            color: white;
            padding: 15px;
            border-radius: 12px;
            margin: 20px 0;
            text-align: center;
            font-weight: 500;
            box-shadow: var(--shadow);
        }

        .loader-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(5px);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 9999;
            transition: var(--transition);
        }

        .loader-container.active {
            display: flex;
        }

        .loader {
            width: 50px;
            height: 50px;
            border: 4px solid #f3f3f3;
            border-top: 4px solid var(--secondary);
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        .loader-text {
            position: absolute;
            top: 60%;
            color: var(--primary);
            font-weight: 600;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .contact-info {
            text-align: center;
            margin-top: 30px;
            padding: 20px;
            background: var(--white);
            border-radius: 16px;
            box-shadow: var(--shadow);
            border: 1px solid rgba(0, 0, 0, 0.05);
        }

        .contact-info h3 {
            color: var(--primary);
            margin-bottom: 15px;
        }

        .contact-info p {
            color: var(--gray);
            line-height: 1.8;
        }

        .contact-info a {
            color: var(--secondary);
            text-decoration: none;
            font-weight: 600;
            transition: var(--transition);
        }

        .contact-info a:hover {
            color: var(--secondary-dark);
            text-decoration: underline;
        }

        /* Animation enhancements */
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .card {
            animation: fadeIn 0.6s ease-out;
        }

        .card:nth-child(2) {
            animation-delay: 0.1s;
        }

        .seat {
            animation: fadeIn 0.3s ease-out;
        }

        /* Accessibility improvements */
        .seat:focus {
            outline: 3px solid var(--secondary);
            outline-offset: 2px;
        }

        .btn:focus {
            outline: 3px solid var(--secondary);
            outline-offset: 2px;
        }

        input:focus,
        select:focus {
            outline: none;
        }

        /* High contrast mode support */
        @media (prefers-contrast: high) {
            .card {
                border: 2px solid var(--dark);
            }
            
            .seat {
                border: 2px solid var(--dark);
            }
        }

        /* Reduced motion support */
        @media (prefers-reduced-motion: reduce) {
            * {
                animation-duration: 0.01ms !important;
                animation-iteration-count: 1 !important;
                transition-duration: 0.01ms !important;
            }
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="logo">
            <div class="logo-icon">
                <i class="fas fa-bus"></i>
            </div>
            <div class="logo-text">GHELIOS TRANS</div>
        </div>
        <div class="tagline">Надёжные перевозки между Молдовой и Россией</div>
    </div>

    <div class="container">
        <!-- Date Selection and Seat Map -->
        <div class="card">
            <div class="card-title">
                <i class="fas fa-calendar-alt"></i>
                Выбор рейса и места
            </div>
            
            <div class="date-selection">
                <div class="input-group required">
                    <label for="tripDate">Дата рейса</label>
                    <input type="date" id="tripDate" required>
                </div>
                <div class="info-box" id="directionInfo" style="display:none"></div>
                <button type="button" class="btn btn-secondary" onclick="loadSeats()">
                    <i class="fas fa-search"></i>
                    Найти места
                </button>
            </div>

            <div id="seatMapContainer" style="display: none;">
                <div class="seat-map">
                    <div class="bus-layout">
                        <div class="bus-front">
                            <i class="fas fa-steering-wheel"></i>
                            Водитель
                        </div>
                        <div class="seat-grid" id="seatGrid">
                            <!-- Seats will be generated dynamically -->
                        </div>
                    </div>
                </div>

                <div class="seat-legend">
                    <div class="legend-item">
                        <div class="legend-color free"></div>
                        <span>Свободно</span>
                    </div>
                    <div class="legend-item">
                        <div class="legend-color booked"></div>
                        <span>Забронировано</span>
                    </div>
                    <div class="legend-item">
                        <div class="legend-color confirmed"></div>
                        <span>Подтверждено</span>
                    </div>
                    <div class="legend-item">
                        <div class="legend-color selected"></div>
                        <span>Выбрано</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Booking Form -->
        <div class="card">
            <div class="card-title">
                <i class="fas fa-user-edit"></i>
                Данные пассажира
            </div>

            <form id="bookingForm" onsubmit="submitBooking(event)">
                <div class="input-group required">
                    <label for="name">Полное имя</label>
                    <input type="text" id="name" required placeholder="Введите ваше полное имя">
                </div>

                <div class="input-group required">
                    <label for="phone">Телефон</label>
                    <input type="tel" id="phone" required placeholder="+373 XX XXX XXX">
                </div>

                <div class="input-group required">
                    <label for="email">Email</label>
                    <input type="email" id="email" required placeholder="example@mail.com">
                </div>

                <div class="input-group required">
                    <label for="fromCity">Город посадки</label>
                    <select id="fromCity" required>
                        <option value="">Выберите город</option>
                    </select>
                </div>

                <div class="input-group required">
                    <label for="toCity">Город высадки</label>
                    <select id="toCity" required>
                        <option value="">Выберите город</option>
                    </select>
                </div>

                <div class="luggage-section">
                    <h3><i class="fas fa-suitcase"></i> Багаж</h3>
                    <div class="info-box">
                        <i class="fas fa-info-circle"></i>
                        Норма багажа: 50 кг бесплатно. Доплата за каждый лишний кг: 5 лей
                    </div>
                    
                    <div class="luggage-grid">
                        <div class="input-group">
                            <label for="luggageWeight">Вес багажа (кг)</label>
                            <input type="number" id="luggageWeight" min="0" max="200" value="50">
                        </div>
                        <div class="input-group">
                            <label for="luggagePieces">Количество мест</label>
                            <input type="number" id="luggagePieces" min="0" max="10" value="1">
                        </div>
                    </div>
                </div>

                <div id="bookingSummary" style="display: none;" class="booking-summary">
                    <div class="summary-item">
                        <span class="label">Место:</span>
                        <span class="value" id="summarySelectedSeat">-</span>
                    </div>
                    <div class="summary-item">
                        <span class="label">Дата:</span>
                        <span class="value" id="summaryTripDate">-</span>
                    </div>
                    <div class="summary-item">
                        <span class="label">Маршрут:</span>
                        <span class="value" id="summaryRoute">-</span>
                    </div>
                    <div class="summary-item">
                        <span class="label">Базовая цена:</span>
                        <span class="value" id="summaryBasePrice">- лей</span>
                    </div>
                    <div class="summary-item">
                        <span class="label">Доплата за багаж:</span>
                        <span class="value" id="summaryLuggageExtra">0 лей</span>
                    </div>
                    <div class="summary-item">
                        <span class="label">Итого к оплате:</span>
                        <span class="value" id="summaryTotalPrice">- лей</span>
                    </div>
                </div>

                <div class="button-group">
                    <button type="button" class="btn btn-secondary" onclick="cancelBooking()">
                        <i class="fas fa-times"></i>
                        Отмена
                    </button>
                    <button type="submit" class="btn btn-primary" id="submitBtn" disabled>
                        <i class="fas fa-check"></i>
                        Забронировать
                    </button>
                </div>
            </form>
        </div>

        <!-- Booking code lookup -->
        <div class="card">
            <div class="card-title">
                <i class="fas fa-qrcode"></i>
                Проверить бронь по коду
            </div>
            <div class="input-group">
                <label for="checkCode">Код брони</label>
                <input type="text" id="checkCode" placeholder="Например, AB2C3D7">
            </div>
            <div class="button-group">
                <button type="button" class="btn btn-secondary" onclick="checkBookingByCode()">
                    <i class="fas fa-search"></i>
                    Проверить
                </button>
            </div>
            <div id="checkResult" style="margin-top:15px"></div>
        </div>
    </div>

    <div class="contact-info">
        <h3><i class="fas fa-phone"></i> Контакты для справок</h3>
        <p>
            Телефон: <a href="tel:+37312345678">+373 1 234 56 78</a><br>
            Email: <a href="mailto:info@ghelios.com">info@ghelios.com</a><br>
            WhatsApp: <a href="https://wa.me/37312345678">+373 1 234 56 78</a>
        </p>
    </div>

    <!-- Loader -->
    <div class="loader-container" id="loader">
        <div class="loader"></div>
        <div class="loader-text">Загрузка...</div>
    </div>

    <script>
        // Configuration
        const GOOGLE_SCRIPT_URL = 'https://script.google.com/macros/s/AKfycbw4mxF8WVsobklKyE82Woe4fFeD6lvN7WoynwDvhC1D3FPBnlsOs9iuvQ_ByYPDdjX3aQ/exec';
        
        // State management
        let selectedSeat = null;
        let currentTripDate = null;
        let seatData = [];
        let currentTotalPrice = 0;
        let cities = [];

        // Initialize the application
        document.addEventListener('DOMContentLoaded', function() {
            initializeApp();
            setMinDate();
            setupDateValidation();
        });

        async function initializeApp() {
            showLoader('Загрузка городов...');
            try {
                await loadCities();
            } catch (error) {
                showError('Ошибка загрузки данных: ' + error.message);
            } finally {
                hideLoader();
            }
        }

        function setMinDate() {
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('tripDate').min = today;
        }

        function setupDateValidation() {
            const dateInput = document.getElementById('tripDate');
            dateInput.addEventListener('change', () => {
                const value = dateInput.value;
                if (!value) return;
                const d = new Date(value + 'T00:00:00');
                if (!isAllowedTripDate(d)) {
                    const adjusted = nextAllowedDate(d);
                    dateInput.value = adjusted.toISOString().split('T')[0];
                    showError('Доступны только рейсы по вторникам и субботам. Дата изменена автоматически.');
                }
                updateDirectionInfo();
            });
        }

        function isAllowedTripDate(d) {
            const dow = d.getUTCDay(); // 0..6
            return dow === 2 || dow === 6; // Tue or Sat
        }

        function nextAllowedDate(d) {
            const nd = new Date(d);
            for (let i = 0; i < 7; i++) {
                nd.setUTCDate(nd.getUTCDate() + 1);
                if (isAllowedTripDate(nd)) return nd;
            }
            return d;
        }

        function updateDirectionInfo() {
            const dateStr = document.getElementById('tripDate').value;
            const box = document.getElementById('directionInfo');
            if (!dateStr) { box.style.display = 'none'; return; }
            const d = new Date(dateStr + 'T00:00:00');
            const dow = d.getUTCDay();
            let dir = '';
            if (dow === 6) dir = 'Направление: Молдова → Россия (суббота)';
            if (dow === 2) dir = 'Направление: Россия → Молдова (вторник)';
            box.textContent = dir || '';
            box.style.display = dir ? 'block' : 'none';
        }

        async function loadCities() {
            try {
                cities = await makeGoogleScriptRequest('getCities');
                populateCitySelectors();
            } catch (error) {
                console.error('Error loading cities:', error);
                // Fallback cities
                cities = ['Кишинев', 'Москва', 'Санкт-Петербург', 'Краснодар'];
                populateCitySelectors();
            }
        }

        function populateCitySelectors() {
            const fromCitySelect = document.getElementById('fromCity');
            const toCitySelect = document.getElementById('toCity');
            
            fromCitySelect.innerHTML = '<option value="">Выберите город</option>';
            toCitySelect.innerHTML = '<option value="">Выберите город</option>';
            
            cities.forEach(city => {
                const fromOption = document.createElement('option');
                fromOption.value = city;
                fromOption.textContent = city;
                fromCitySelect.appendChild(fromOption);
                
                const toOption = document.createElement('option');
                toOption.value = city;
                toOption.textContent = city;
                toCitySelect.appendChild(toOption);
            });
        }

        async function loadSeats() {
            const tripDate = document.getElementById('tripDate').value;
            
            if (!tripDate) {
                showError('Выберите дату рейса');
                return;
            }
            // Enforce only Tue/Sat
            const d = new Date(tripDate + 'T00:00:00');
            if (!isAllowedTripDate(d)) {
                const adjusted = nextAllowedDate(d);
                document.getElementById('tripDate').value = adjusted.toISOString().split('T')[0];
                updateDirectionInfo();
                showError('Доступны только рейсы по вторникам и субботам. Дата изменена автоматически.');
                return;
            }

            showLoader('Загрузка мест...');
            
            try {
                currentTripDate = tripDate;
                seatData = await makeGoogleScriptRequest('getSeats', { tripDate });
                
                renderSeatMap();
                document.getElementById('seatMapContainer').style.display = 'block';
                updateDirectionInfo();
                validateAndEnableSubmit();
                
            } catch (error) {
                showError('Ошибка загрузки мест: ' + error.message);
                document.getElementById('seatMapContainer').style.display = 'none';
            } finally {
                hideLoader();
            }
        }

        function renderSeatMap() {
            const seatGrid = document.getElementById('seatGrid');
            seatGrid.innerHTML = '';

            for (let i = 1; i <= 60; i++) {
                const seat = seatData.find(s => s.seat === i) || { 
                    seat: i, 
                    status: 'свободно',
                    basePrice: 500
                };
                
                const seatElement = document.createElement('button');
                seatElement.type = 'button';
                seatElement.className = `seat ${seat.status === 'свободно' ? 'free' : (seat.status === 'забронировано' ? 'booked' : 'confirmed')}`;
                seatElement.textContent = i;
                seatElement.onclick = () => selectSeat(i, seat);
                
                if (i % 4 === 2) {
                    seatElement.classList.add('aisle-break');
                }
                
                if (seat.status !== 'свободно') {
                    seatElement.disabled = true;
                }
                
                seatGrid.appendChild(seatElement);
            }
        }

        function selectSeat(seatNumber, seatInfo) {
            if (seatInfo.status !== 'свободно') {
                return;
            }

            document.querySelectorAll('.seat.selected').forEach(seat => {
                seat.classList.remove('selected');
            });

            const seatElement = document.querySelector(`.seat:nth-child(${seatNumber})`);
            if (seatElement) {
                seatElement.classList.add('selected');
            }

            selectedSeat = {
                number: seatNumber,
                basePrice: seatInfo.basePrice || 500
            };

            updateBookingSummary();
            validateAndEnableSubmit();
        }

        function updateBookingSummary() {
            if (!selectedSeat || !currentTripDate) return;

            const fromCity = document.getElementById('fromCity').value;
            const toCity = document.getElementById('toCity').value;
            const luggageWeight = parseInt(document.getElementById('luggageWeight').value) || 50;
            
            const luggageExtra = Math.max(0, luggageWeight - 50) * 5;
            currentTotalPrice = selectedSeat.basePrice + luggageExtra;

            document.getElementById('summarySelectedSeat').textContent = selectedSeat.number;
            document.getElementById('summaryTripDate').textContent = currentTripDate;
            document.getElementById('summaryRoute').textContent = `${fromCity || '?'} → ${toCity || '?'}`;
            document.getElementById('summaryBasePrice').textContent = `${selectedSeat.basePrice} лей`;
            document.getElementById('summaryLuggageExtra').textContent = `${luggageExtra} лей`;
            document.getElementById('summaryTotalPrice').textContent = `${currentTotalPrice} лей`;

            document.getElementById('bookingSummary').style.display = 'block';
        }

        function calculatePrice() {
            if (selectedSeat) {
                updateBookingSummary();
            }
        }

        function cancelBooking() {
            selectedSeat = null;
            currentTripDate = null;
            
            document.getElementById('bookingForm').reset();
            document.getElementById('tripDate').value = '';
            document.getElementById('directionInfo').style.display = 'none';
            
            document.getElementById('bookingSummary').style.display = 'none';
            document.getElementById('seatMapContainer').style.display = 'none';
            
            document.querySelectorAll('.seat.selected').forEach(seat => {
                seat.classList.remove('selected');
            });
            
            document.getElementById('submitBtn').disabled = true;
            
            document.getElementById('luggageWeight').value = 50;
            document.getElementById('luggagePieces').value = 1;
        }

        async function submitBooking(event) {
            event.preventDefault();
            
            if (!selectedSeat || !currentTripDate) {
                showError('Выберите место и дату рейса');
                return;
            }

            const name = document.getElementById('name').value.trim();
            const phone = document.getElementById('phone').value.trim();
            const email = document.getElementById('email').value.trim();
            const fromCity = document.getElementById('fromCity').value;
            const toCity = document.getElementById('toCity').value;
            const luggageWeight = document.getElementById('luggageWeight').value;
            const luggagePieces = document.getElementById('luggagePieces').value;

            if (!name || !phone || !email || !fromCity || !toCity) {
                showError('Заполните все обязательные поля');
                return;
            }

            const phoneRegex = /^(\+373|373|0)?[0-9]{8,9}$/;
            if (!phoneRegex.test(phone.replace(/\s/g, ''))) {
                showError('Введите корректный номер телефона');
                return;
            }

            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(email)) {
                showError('Введите корректный email адрес');
                return;
            }

            if (fromCity === toCity) {
                showError('Города посадки и высадки должны отличаться');
                return;
            }

            showLoader('Оформление бронирования...');
            
            try {
                const res = await makeGoogleScriptRequest('bookSeat', {
                    tripDate: currentTripDate,
                    seat: selectedSeat.number,
                    name,
                    phone,
                    email,
                    fromCity,
                    toCity,
                    luggageWeight,
                    luggagePieces
                });

                const code = res && res.code ? res.code : '';
                showSuccessHTML(`<i class="fas fa-check-circle"></i> Бронирование успешно оформлено! Ваш код: <strong>${code}</strong>. Сохраните его для проверки статуса.`);
                
                cancelBooking();
                loadSeats();
                
            } catch (error) {
                showError('Ошибка бронирования: ' + error.message);
            } finally {
                hideLoader();
            }
        }

        async function checkBookingByCode() {
            const code = document.getElementById('checkCode').value.trim();
            if (!code) { showError('Введите код'); return; }
            showLoader('Поиск брони...');
            try {
                const booking = await makeGoogleScriptRequest('getBookingByCode', { code, mask: 'true' });
                const box = document.getElementById('checkResult');
                if (!booking) {
                    box.innerHTML = '<div class="error-message"><i class="fas fa-exclamation-triangle"></i> Бронь не найдена</div>';
                    return;
                }
                box.innerHTML = `
                    <div class="booking-summary">
                        <div class="summary-item"><span class="label">Код</span><span class="value">${booking.code}</span></div>
                        <div class="summary-item"><span class="label">Дата рейса</span><span class="value">${booking.tripDate}</span></div>
                        <div class="summary-item"><span class="label">Место</span><span class="value">${booking.seat}</span></div>
                        <div class="summary-item"><span class="label">Статус</span><span class="value">${booking.status}</span></div>
                        <div class="summary-item"><span class="label">Пассажир</span><span class="value">${booking.name || '-'}</span></div>
                        <div class="summary-item"><span class="label">Телефон</span><span class="value">${booking.phone || '-'}</span></div>
                        <div class="summary-item"><span class="label">Email</span><span class="value">${booking.email || '-'}</span></div>
                        <div class="summary-item"><span class="label">Маршрут</span><span class="value">${(booking.fromCity||'?')} → ${(booking.toCity||'?')}</span></div>
                    </div>`;
            } catch (e) {
                showError('Ошибка поиска: ' + (e.message || e));
            } finally {
                hideLoader();
            }
        }

        // Google Script API
        async function makeGoogleScriptRequest(action, params = {}) {
            const url = new URL(GOOGLE_SCRIPT_URL);
            url.searchParams.set('action', action);
            
            Object.entries(params).forEach(([key, value]) => {
                if (value !== null && value !== undefined) {
                    url.searchParams.set(key, value);
                }
            });

            const response = await fetch(url, {
                method: 'GET',
                mode: 'cors'
            });

            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const data = await response.json();
            
            if (data.error) {
                throw new Error(data.error);
            }

            return data;
        }

        // Dynamic form validation
        function validateAndEnableSubmit() {
            const name = document.getElementById('name').value.trim();
            const phone = document.getElementById('phone').value.trim();
            const email = document.getElementById('email').value.trim();
            const fromCity = document.getElementById('fromCity').value;
            const toCity = document.getElementById('toCity').value;
            const submitBtn = document.getElementById('submitBtn');
            
            const isFormValid = name && phone && email && fromCity && toCity && selectedSeat && currentTripDate;
            
            submitBtn.disabled = !isFormValid;
        }

        // Event listeners for price recalculation and form validation
        document.getElementById('luggageWeight').addEventListener('input', calculatePrice);
        document.getElementById('luggagePieces').addEventListener('input', calculatePrice);
        
        // Event listeners for form validation
        document.getElementById('name').addEventListener('input', validateAndEnableSubmit);
        document.getElementById('phone').addEventListener('input', validateAndEnableSubmit);
        document.getElementById('email').addEventListener('input', validateAndEnableSubmit);
        document.getElementById('fromCity').addEventListener('change', validateAndEnableSubmit);
        document.getElementById('toCity').addEventListener('change', validateAndEnableSubmit);

        // Utility functions
        function showLoader(message = 'Загрузка...') {
            document.querySelector('.loader-text').textContent = message;
            document.getElementById('loader').classList.add('active');
        }

        function hideLoader() {
            document.getElementById('loader').classList.remove('active');
        }

        function showError(message) {
            const errorDiv = document.createElement('div');
            errorDiv.className = 'error-message';
            errorDiv.innerHTML = `<i class="fas fa-exclamation-triangle"></i> ${message}`;
            const container = document.querySelector('.container');
            container.insertBefore(errorDiv, container.firstChild);
            setTimeout(() => { if (errorDiv.parentNode) { errorDiv.parentNode.removeChild(errorDiv); } }, 5000);
        }

        function showSuccess(message) {
            const successDiv = document.createElement('div');
            successDiv.className = 'success-message';
            successDiv.innerHTML = `<i class="fas fa-check-circle"></i> ${message}`;
            const container = document.querySelector('.container');
            container.insertBefore(successDiv, container.firstChild);
            setTimeout(() => { if (successDiv.parentNode) { successDiv.parentNode.removeChild(successDiv); } }, 7000);
        }

        function showSuccessHTML(html) {
            const successDiv = document.createElement('div');
            successDiv.className = 'success-message';
            successDiv.innerHTML = html;
            const container = document.querySelector('.container');
            container.insertBefore(successDiv, container.firstChild);
            setTimeout(() => { if (successDiv.parentNode) { successDiv.parentNode.removeChild(successDiv); } }, 10000);
        }
    </script>
</body>
</html>
